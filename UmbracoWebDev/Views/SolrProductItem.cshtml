@inherits Umbraco.Web.Mvc.UmbracoViewPage<UmbracoWebDev.Models.Solr.SolrProducts>
@using ContentModels = Umbraco.Web.PublishedContentModels;
@using ClassLibrary.Entity;
@using UmbracoWebDev.Controllers;
@using UmbracoWebDev.Models.Cart;
@using System.Text;
@using System.Web;

@{
    Layout = "Master.cshtml";
    Product prod = new Product()
    {
        ProductName = Model.SingleProduct.ProductName,
        ProductTitle = Model.SingleProduct.ProductTitle,
        UnitPrice = Model.SingleProduct.UnitPrice,
        ProductId = Model.SingleProduct.ProductId,
        CategoryId = Model.SingleProduct.CategoryId,
        ProductDescription = Model.SingleProduct.ProductDescription,
    };

    //CartModel carM = new CartModel(Model.SingleProduct.Product_Price, Model.SingleProduct.Product_Name, Model.SingleProduct.Product_Id);
    CartItem cartItem = new CartItem() { ProductId = Model.SingleProduct.ProductId };

    string imgurl = Url.Action("GetImage", "Image", new { prodId = prod.ProductId, pictureQuality = "thumb" });
}

<head>
    <link rel="stylesheet" type="text/css" href="~/css/product.css">
    <link rel="stylesheet" type="text/css" href="~/css/product_responsive.css">
    <style>

        #description-text {
            text-align: justify;
        }

        .excerpt-hidden {
            height: 300px;
            overflow: hidden;
            position: relative;
            transition-property: all;
            transition-duration: 1s;
        }

            .excerpt-hidden:after {
                content: "";
                position: absolute;
                bottom: 0;
                left: 0;
                width: 100%;
                height: 64px;
                background: linear-gradient(to bottom, rgba(255, 255, 255, 0.4) 0%, rgba(255, 255, 255, 1) 100% );
                transition-property: all;
                transition-duration: 1s;
            }

        .excerpt-visible {
            height: auto;
            overflow: auto;
            transition-property: all;
            transition-duration: 1s;
        }
    </style>
</head>

<!-- Product Detail -->
<div class="product_details">
    <div class="container">
        <div class="row details_row">
            <!-- Product Image -->
            <div class="col-lg-4">
                <div class="details_image">
                    <div class="details_image_large">
                        @{
                            if (imgurl != null)
                            {
                                <img class="img-fluid" src="@Url.Action("GetImage", "Image", new { prodId = prod.ProductId, pictureQuality = "high" })" />
                            }
                            else
                            {
                                <img class="img-fluid" src="~/Media/1030/product-image_not_available.png" />
                            }
                        }
                    </div>
                </div>
            </div>

            <!-- Product Content -->
            <div class="col-lg-8">
                <div class="details_content">
                    <div class="details_name">@prod.ProductName</div>
                    <div class="details_price">$@prod.UnitPrice</div>

                    <!-- In Stock -->
                    <div class="in_stock_container">
                        <div class="availability">Availability:</div>
                        <span>In Stock</span>
                    </div>
                    <div class="details_text">
                        <div class="block">
                            <div class="content mb-3">
                                @{
                                    var helper = new Helper();
                                    var prodDescSanitized = new System.Web.HtmlString(helper.CleanString(prod.ProductDescription));
                                }

                                <p id="description-text" class="js-excerpt">@prodDescSanitized</p>
                            </div>
                            <a id="description-button" role="button" href="#" class="js-show-more">Show more</a>
                        </div>
                        <!-- Product Quantity -->
                        @{
                            Html.RenderAction("RenderAddToCart", "Cart", new { model = cartItem });
                            if (TempData.ContainsKey("AddedToCart"))
                            {

                                if (TempData["AddedToCart"].Equals(true))
                                {
                                    <p style="color: forestgreen;">Added To cart.</p>
                                }
                                else
                                {
                                    <p style="color: red;">Could not add to cart. Try again later. </p>
                                }
                            }
                        }
                        <!-- Share -->
                        <div class="details_share">
                            <span>Share:</span>
                            <ul>
                                <li><a href="#"><i class="fa fa-pinterest" aria-hidden="true"></i></a></li>
                                <li><a href="#"><i class="fa fa-instagram" aria-hidden="true"></i></a></li>
                                <li><a href="#"><i class="fa fa-facebook" aria-hidden="true"></i></a></li>
                                <li><a href="#"><i class="fa fa-twitter" aria-hidden="true"></i></a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="description_row">
            @Html.Action("GetFeatureForProduct", "ProductFeature", new { product_id = prod.ProductId })
        </div>
    </div>

    <!-- Icon Boxes -->

    <div class="icon_boxes">
        <div class="container">
            <div class="row icon_box_row">

                <!-- Icon Box -->
                <div class="col-lg-4 icon_box_col">
                    <div class="icon_box">
                        <div class="icon_box_image"><img src="images/icon_1.svg" alt=""></div>
                        <div class="icon_box_title">Free Shipping Worldwide</div>
                        <div class="icon_box_text">
                            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam a ultricies metus. Sed nec molestie.</p>
                        </div>
                    </div>
                </div>

                <!-- Icon Box -->
                <div class="col-lg-4 icon_box_col">
                    <div class="icon_box">
                        <div class="icon_box_image"><img src="images/icon_2.svg" alt=""></div>
                        <div class="icon_box_title">Free Returns</div>
                        <div class="icon_box_text">
                            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam a ultricies metus. Sed nec molestie.</p>
                        </div>
                    </div>
                </div>

                <!-- Icon Box -->
                <div class="col-lg-4 icon_box_col">
                    <div class="icon_box">
                        <div class="icon_box_image"><img src="images/icon_3.svg" alt=""></div>
                        <div class="icon_box_title">24h Fast Support</div>
                        <div class="icon_box_text">
                            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam a ultricies metus. Sed nec molestie.</p>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>

    <!-- Newsletter -->

    <div class="newsletter">
        <div class="container">
            <div class="row">
                <div class="col">
                    <div class="newsletter_border"></div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-8 offset-lg-2">
                    <div class="newsletter_content text-center">
                        <div class="newsletter_title">Subscribe to our newsletter</div>
                        <div class="newsletter_text"><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam a ultricies metus. Sed nec molestie eros</p></div>
                        <div class="newsletter_form_container">
                            <form action="#" id="newsletter_form" class="newsletter_form">
                                <input type="email" class="newsletter_input" required="required">
                                <button class="newsletter_button trans_200"><span>Subscribe</span></button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<!-- Script that handles the showmore and showless textbox -->
<script>
    var descText = document.getElementById("description-text");
    var showButton = document.getElementById("description-button");
    if (descText.offsetHeight >= 300) {
        descText.classList.add("excerpt-hidden");
        const Utils = {

            addClass: function (element, theClass) {
                element.classList.add(theClass);
            },

            removeClass: function (element, theClass) {
                element.classList.remove(theClass);
            },

            showMore: function (element, excerpt) {
                element.addEventListener("click", event => {
                    const linkText = event.target.textContent.toLowerCase();
                    event.preventDefault();
                    if (linkText == "show more") {
                        element.textContent = "Show less";
                        this.removeClass(excerpt, "excerpt-hidden");
                        this.addClass(excerpt, "excerpt-visible");
                    } else {
                        element.textContent = "Show more";
                        this.removeClass(excerpt, "excerpt-visible");
                        this.addClass(excerpt, "excerpt-hidden");
                    }
                });
            }
        };

        const ExcerptWidget = {
            showMore: function (showMoreLinksTarget, excerptTarget) {
                const showMoreLinks = document.querySelectorAll(showMoreLinksTarget);

                showMoreLinks.forEach(function (link) {
                    const excerpt = link.previousElementSibling.querySelector(excerptTarget);
                    Utils.showMore(link, excerpt);
                });
            }
        };

        ExcerptWidget.showMore('.js-show-more', '.js-excerpt');
    } else {
        showButton.remove();
    }
</script>